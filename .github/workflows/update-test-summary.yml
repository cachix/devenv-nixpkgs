name: Update test summary

on:
  workflow_run:
    workflows: ["Sync and test rolling"]
    types: [completed]
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Workflow run ID to process'
        required: true
        type: string

permissions:
  contents: write # Push commits to main branch

jobs:
  update-readme:
    runs-on: [self-hosted, Linux]
    # Only run if the devenv workflow was triggered by sync-branch or manually triggered
    if: github.event.workflow_run.head_branch == 'main' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v5
        with:
          ref: main
          fetch-depth: 1

      - name: Configure Git
        run: |
          git config user.name 'GitHub Actions Bot'
          git config user.email 'actions@github.com'

      - name: Setup devenv environment
        uses: cachix/install-nix-action@v31

      - name: Install devenv
        run: nix profile install github:cachix/devenv/latest

      - name: Get test results and update README
        shell: devenv shell bash -- -e {0}
        run: |
          # Get the workflow run ID from the completed devenv workflow or manual input
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            RUN_ID="${{ inputs.run_id }}"
            RUN_URL="https://github.com/${{ github.repository }}/actions/runs/$RUN_ID"
          else
            RUN_ID="${{ github.event.workflow_run.id }}"
            RUN_URL="${{ github.event.workflow_run.html_url }}"
          fi

          # Run the Python test summary updater
          test-summary --run-id "$RUN_ID" --run-url "$RUN_URL" --repo "${{ github.repository }}"

          # Get nixpkgs short hash for commit message
          NIXPKGS_SHORT=$(gh api repos/${{ github.repository }}/git/ref/heads/bump-rolling --jq '.object.sha' | cut -c1-7)

          # Commit the updated README
          git add README.md
          git commit -m "ci: update test results for nixpkgs $NIXPKGS_SHORT"
          git push origin main
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
